#!/usr/bin/env python3
"""Display current strategy thresholds"""

import json
from pathlib import Path

print("=" * 60)
print("üìä CURRENT STRATEGY THRESHOLDS FOR TRIGGERING TRADES")
print("=" * 60)

# Load paper trading config
config_path = Path("configs/paper_trading.json")
if config_path.exists():
    with open(config_path) as f:
        config = json.load(f)
else:
    print("Config file not found!")
    exit(1)

print("\nüéØ GLOBAL THRESHOLDS:")
print(f'  ‚Ä¢ ML Confidence Required: {config["ml_confidence_threshold"]*100:.0f}%')
print(f'  ‚Ä¢ Min Signal Strength: {config["min_signal_strength"]*100:.0f}%')
print(f'  ‚Ä¢ Required Confirmations: {config["required_confirmations"]}/3 indicators')
print(f'  ‚Ä¢ Max Positions: {config["max_positions"]}')
print(f'  ‚Ä¢ Risk Per Trade: {config["risk_per_trade"]*100:.0f}%')

print("\nüí∞ DCA STRATEGY:")
dca = config["strategies"]["DCA"]
print(f'  ‚Ä¢ Status: {"‚úÖ ENABLED" if dca["enabled"] else "‚ùå DISABLED"}')
print(f'  ‚Ä¢ Min Confidence: {dca["min_confidence"]*100:.0f}%')
print(f"  ‚Ä¢ Price Drop Trigger: -5% from 4h high (hardcoded)")
print(f'  ‚Ä¢ Grid Levels: {dca["grid_levels"]} levels')
print(f'  ‚Ä¢ Grid Spacing: {dca["grid_spacing"]*100:.0f}%')
print(f'  ‚Ä¢ Volume Threshold: ${dca["volume_threshold"]:,}')

print("\nüé¢ SWING STRATEGY:")
swing = config["strategies"]["SWING"]
print(f'  ‚Ä¢ Status: {"‚úÖ ENABLED" if swing["enabled"] else "‚ùå DISABLED"}')
print(f'  ‚Ä¢ Min Confidence: {swing["min_confidence"]*100:.0f}%')
print(f"  ‚Ä¢ Min Score Required: 50 points (hardcoded)")
print(f'  ‚Ä¢ Breakout Confirmation: {swing["breakout_confirmation"]*100:.1f}%')
print(f'  ‚Ä¢ Volume Surge Required: {swing["volume_surge"]}x average')
print(f'  ‚Ä¢ Take Profit: {swing["take_profit"]*100:.0f}%')
print(f'  ‚Ä¢ Stop Loss: {swing["stop_loss"]*100:.0f}%')

print("\nüìä CHANNEL STRATEGY:")
channel = config["strategies"]["CHANNEL"]
print(f'  ‚Ä¢ Status: {"‚úÖ ENABLED" if channel["enabled"] else "‚ùå DISABLED"}')
print(f'  ‚Ä¢ Min Confidence: {channel["min_confidence"]*100:.0f}%')
print(f'  ‚Ä¢ Entry at: {channel["entry_threshold"]*100:.0f}% of channel range')
print(f'  ‚Ä¢ Exit at: {channel["exit_threshold"]*100:.0f}% of channel range')
print(f'  ‚Ä¢ Min Channel Width: {channel["channel_width_min"]*100:.0f}%')
print(f'  ‚Ä¢ Required Touches: {channel["channel_touches"]} on each boundary')

print("\nüìà SCORING BREAKDOWN:")
print("\nSWING SCORING (100 points max, 50 min to trigger):")
print("  ‚Ä¢ Breakout Detection: 30 points")
print("  ‚Ä¢ Volume Confirmation: 20 points")
print("  ‚Ä¢ Trend Alignment: 20 points")
print("  ‚Ä¢ Momentum Indicators: 15 points")
print("  ‚Ä¢ Price Action (24h): 15 points")

print("\nDCA TRIGGERS:")
print("  ‚Ä¢ Price drops 5% from 4-hour high")
print("  ‚Ä¢ Volume above average")
print("  ‚Ä¢ Not in strong downtrend")
print("  ‚Ä¢ ML confidence > 50%")

print("\nCHANNEL TRIGGERS:")
print("  ‚Ä¢ Clear parallel channel formed")
print("  ‚Ä¢ At least 2 touches on each boundary")
print("  ‚Ä¢ Price near lower boundary (90% of range)")
print("  ‚Ä¢ Channel width between 2-10%")

print("\n‚è∞ LAST UPDATED:", config["updated_at"][:19])
print("=" * 60)
